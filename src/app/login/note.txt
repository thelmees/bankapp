data binding in angular
----------------------

ts-component
html-view

1-one way binding

    1.1component to view

      1.1.1 string interpollation   {{}}
      1.1.2 property binding        [property]="value"

    1.2 view to componrnt
      
      1.2.1 event binding                  (eventname)="method name()"
      1.2.2 event binding using $ event    (eventname)="methodname($event)"
      1.2.3 event binding using template rendering variable   #variable

2. two way binding

  2.1 ngmodel          [(ngmodel)]="value"
                       FormsModule

Redirection in angular 
-----------------------

navigateByUrl     - method used to redirection

Router            - class

AppRoutingModule  - module

Dependency injection
---------------------
- to use a method of class in another class
- in constructor
- step            access pecifier - public/private
                  variable
                  class name
                            private variable:classname

Angular Services
-----------------

ng g s servicename


Angular directives
-------------------

1- structural dierectives - to handle structure datas in view of a component

        -ngFor -can directly apply in html to access elements from array

        -ngIf

Form Validation in Angular
---------------------------

we can create forms in two ways

   1.Template Driven Form

   2.Model Driven Form

       -Reactive Form 
       ----------------

           ReactiveFormsModule - module used to create model forms

           FormBuilder         -class of ReactiveFormsModule

                   -group,array,control

     validate Model Form
     --------------------

     validator - a class in angular it includes methods for apply Validation

     -aceess errors in validor rule

            this.registerForm.get('uname')?.errors

                              -valid    -empty resonse
                              
                              -invalid  - content


                  if(this.registerForm.get('uname')?.error){       //*ngIf


                  }

 Local Storage in Angular
 -------------------------

  - store     localStorage.setItem()
  - access    localStorage.getItem()
  - delete    localStorage.removeItem()


          
















































 user Defined Event Creation In Angular
 ----------------------------------------

 EventEmitter(from angular core)    - class used to create events
 emit()                                   -to start the event


Data in Angular
-----------------

Data   - class

-create an object of class Data to access Data and Time




Angular pipe
-------------

to transform datas into another formate
    eg- data pipe


CLIENT SERVER INTEGRATION
--------------------------
--------------------------


http request Creation
----------------------

HttpClientModule   -Module
HttpClient         -class


Asynchronous reqquest in TS
----------------------------

js - promise       --resolve  then()
                   --reject   catch()

ts-  observable    --resolve  subscribe()
                   --reject   catch()

  Rxjs  -    library to solve asynchrounous code in ts

   (reactive Extension for js)


   appent token in headers of http
   -------------------------------

   create headers

      HttpHeaders  - class to create header object

          let headers=new HttpHeaders()

append token in header object
  
  header.appent('access-token', token)
